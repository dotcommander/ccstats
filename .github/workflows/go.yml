name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Build
      run: go build -v ./...
    
    - name: Test
      run: go test -v ./...
    
    - name: Vet
      run: go vet ./...
    
    - name: Check formatting
      run: |
        fmt_output=$(gofmt -l .)
        if [ -n "$fmt_output" ]; then
          echo "The following files need formatting:"
          echo "$fmt_output"
          exit 1
        fi

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Build releases
      run: |
        GOOS=darwin GOARCH=amd64 go build -o ccstats-darwin-amd64
        GOOS=darwin GOARCH=arm64 go build -o ccstats-darwin-arm64
        GOOS=linux GOARCH=amd64 go build -o ccstats-linux-amd64
        GOOS=windows GOARCH=amd64 go build -o ccstats-windows-amd64.exe
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ccstats-darwin-amd64
          ccstats-darwin-arm64
          ccstats-linux-amd64
          ccstats-windows-amd64.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}